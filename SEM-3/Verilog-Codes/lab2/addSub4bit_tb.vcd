$date
	Sat Nov 18 12:53:51 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module addSub4bit_tb $end
$var wire 1 ! cout $end
$var wire 4 " s [3:0] $end
$var reg 1 # cin $end
$var reg 4 $ x [3:0] $end
$var reg 4 % y [3:0] $end
$scope module uut $end
$var wire 3 & c [2:0] $end
$var wire 1 ' cin $end
$var wire 1 ! cout $end
$var wire 4 ( s [3:0] $end
$var wire 4 ) x [3:0] $end
$var wire 4 * y [3:0] $end
$scope module stg0 $end
$var wire 1 ' cin $end
$var wire 1 + cout $end
$var wire 1 , s $end
$var wire 1 - x $end
$var wire 1 . y $end
$upscope $end
$scope module stg1 $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 s $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$upscope $end
$scope module stg2 $end
$var wire 1 4 cin $end
$var wire 1 5 cout $end
$var wire 1 6 s $end
$var wire 1 7 x $end
$var wire 1 8 y $end
$upscope $end
$scope module stg3 $end
$var wire 1 9 cin $end
$var wire 1 ! cout $end
$var wire 1 : s $end
$var wire 1 ; x $end
$var wire 1 < y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0<
0;
0:
09
08
17
16
05
04
13
02
11
00
0/
0.
1-
1,
0+
b10 *
b101 )
b111 (
0'
b0 &
b10 %
b101 $
0#
b111 "
0!
$end
#20
1!
19
15
1/
06
1+
14
0,
10
b111 &
11
0:
b10 "
b10 (
1.
12
1;
b11 %
b11 *
b1111 $
b1111 )
#40
04
00
b101 &
06
02
0;
1.
03
18
1<
1,
b11 "
b11 (
b10 %
b10 *
b101 $
b101 )
1#
1'
#60
16
0,
14
10
b111 &
01
1:
b1100 "
b1100 (
0.
12
1;
b11 %
b11 *
b1111 $
b1111 )
#80
