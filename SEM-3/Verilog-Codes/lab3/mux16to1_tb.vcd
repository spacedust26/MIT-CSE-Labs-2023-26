$date
	Sat Nov 18 17:12:57 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module mux16to1_tb $end
$var wire 1 ! y $end
$var reg 4 " s [3:0] $end
$var reg 16 # w [15:0] $end
$scope module uut $end
$var wire 2 $ m [1:0] $end
$var wire 4 % s [3:0] $end
$var wire 16 & w [15:0] $end
$var wire 1 ! y $end
$scope module stg0 $end
$var wire 3 ' s [2:0] $end
$var wire 8 ( w [7:0] $end
$var reg 1 ) y $end
$upscope $end
$scope module stg1 $end
$var wire 3 * s [2:0] $end
$var wire 8 + w [7:0] $end
$var reg 1 , y $end
$upscope $end
$scope module stg2 $end
$var wire 1 - s $end
$var wire 2 . w [1:0] $end
$var reg 1 / y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0/
b0 .
0-
0,
b1010111 +
b11 *
0)
b1110100 (
b11 '
b101011101110100 &
b11 %
b0 $
b101011101110100 #
b11 "
0!
$end
#20
1/
1!
1)
1,
b11 $
b11 .
b100 '
b100 *
b11010111 (
b1110100 +
b100 "
b100 %
b111010011010111 #
b111010011010111 &
#40
0)
0/
0!
0,
b0 $
b0 .
b11 '
b11 *
1-
b11010111 +
b1011 "
b1011 %
b1101011111010111 #
b1101011111010111 &
#60
1)
b1 $
b1 .
b111 '
b111 *
b1000111 +
b1111 "
b1111 %
b100011111010111 #
b100011111010111 &
#80
