1)Create Employee table with following constraints: 
 Make EmpNo as Primary key. 
 Do not allow EmpName, Gender, Salary and Address to have null values. 
 Allow Gender to have one of the two values: ‘M’, ‘F’. 

create table Employee(
  EmpNo int primary key,
  EmpName varchar(25) not null,
  Gender char(1) not null,
  Salary number(8) not null,
  Address char(25) not null,
  DNo int,
  check(gender in ('M','F'))
);

2)Create Department table with following: 
 Make DeptNo as Primary key 
 Make DeptName as candidate key

create table Department(
  DeptNo int primary key,
  DeptName varchar(25) unique,
  Location char(25)
);

3)Make DNo of Employee as foreign key which refers to DeptNo of Department

alter table Employee
add constraint fk_id
foreign key (DNo) references department (DeptNo);

4)Insert few tuples into Employee and Department which satisfies the above constraints. 

insert into department values(111, 'cse', 'manipal');
insert into department values(112, 'eee', 'mumbai');
insert into department values(113, 'it', 'goa');

insert into employee values(101, 'adam', 'M', 10000, 'udupi', 111);
insert into employee values(102, 'bob', 'M', 50000, 'manglore', 111);
insert into employee values(103, 'casey', 'F', 80000, 'san jose', 113);

5)Try  to  insert  few  tuples  into  Employee  and  Department  which  violates  some  of  the 
above constraints

insert into department values(112, 'cce', 'pune');
insert into department values(114, 'cse', 'athens');
insert into employee values(104, 'donald', 'G', 70000, 'new york', 112);
insert into employee values(105, 'eva', 'F', 80000, null , 113);

6)Try to modify/delete a tuple which violates a constraint.

drop table department;
update employee set EmpNo = 101
where EmpName = 'bob';

7)Modify the foreign key constraint of Employee table such that whenever a department 
tuple is deleted, the employees belonging to that department will also be deleted.

alter table employee
drop constraint fk_id;

alter table employee
add constraint fk_id
foreign key (DNo) references department (DeptNo)
on delete cascade;

8)Create a named constraint to set the default salary to 10000 and test the constraint by inserting a new record.

alter table employee
modify (constraint sal Salary default 10000);

insert into employee (EmpNo, EmpName, Gender, Address, DNo) values(104, 'dan', 'M', 'madagascar', 112);

select *
from employee;

9)List all Students with names and their department names.

select name, dept_name
from student;

10) List all instructors in CSE department.

select name
from instructor
where dept_name = 'Comp. Sci.';

11)Find the names of courses in CSE department which have 3 credits.

select title 
from course
where dept_name = 'Comp. Sci.' and credits = 3;

12)For the student with ID 12345 (or any other value), show all course-id and title of all 
courses registered for by the student.

select course_id, title 
from takes natural join course
where id = 12345;

13)List all the instructors whose salary is in between 40000 and 90000.

select *
from instructor
where salary between 40000 and 90000;

14)Display the IDs of all instructors who have never taught a course.

select id
from instructor
where id not in(select id from teaches);

15)Find the student names, course names, and the year, for all students those who have 
attended classes in room-number 303.

select name, title, year
from student, course, section
where student.dept_name = course.dept_name and course.course_id = section.course_id and room_number = 120;

16)For all students who have opted courses in 2015, find their names and course id’s 
with the attribute course title replaced by c-name.

select name, course_id c_name, title
from student natural join course natural join takes
where year = 2009;

17)Find the names of all instructors whose salary is greater than the salary of at least 
one instructor of CSE department and salary replaced by inst-salary.

select name, salary
from instructor
where salary > (select min(salary)
from instructor
where dept_name = 'Comp. Sci.');

18)Find the names of all instructors whose department name includes the substring 
‘ch’.

select name
from instructor
where dept_name like '%ic%';

19)List the student names along with the length of the student names.

select name, length(name)
from student;

20)List the department names and 3 characters from 3rd position of each department name

select dept_name, substr(dept_name,3,3)
from department;

21)List the instructor names in upper case.

select upper(name)
from instructor;

22)Replace NULL with value1(say 0) for a column in any of the table

select id, course_id, nvl(grade, 0)
from takes
where id = '98988';

23)Display the salary and salary/3 rounded to nearest hundred from Instructor.

select salary, round(salary/3,-2)
from instructor;

24) Display the birth date of all the employees in the following format:
 ‘DD-MON-YYYY’
 ‘DD-MON-YY’
 ‘DD-MM-YY’

alter table employee
add (DOB date);

update employee set dob = '01-may-2004'
where EmpNo = 101;
update employee set dob = '20/NOV/2031'
where EmpNo = 102;
update employee set dob = '20.Jan.2004'
where EmpNo = 103;
update employee set dob = '05-june-2004'
where EmpNo = 104;

select EmpName, to_char(dob, 'DD-MON-YYYY')
from employee;

select EmpName, to_char(dob, 'DD-MON-YY')
from employee;

select EmpName, to_char(dob, 'DD-MM-YY')
from employee;

25)List the employee names and the year (fully spelled out) in which they are born
 ‘YEAR’
 ‘Year’
 ‘year’

select EmpName, to_char(dob, 'YEAR')
from employee;

select EmpName, to_char(dob, 'Year')
from employee;

select EmpName, to_char(dob, 'year')
from employee;